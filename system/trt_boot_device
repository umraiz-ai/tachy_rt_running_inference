#!/usr/bin/env python

import os, sys
import argparse
import numpy as np
import tachy_rt.core.functions as rt_core

def get_parser():
    """
    Get the parser.
    :return: parser
    """

    parser = argparse.ArgumentParser(description='Deep learning scratch application.')
    parser.add_argument('--path', type=str,
                        help='path for firmware')
    
    parser.add_argument('--upload', type=str,
                        help='upload firmware(true or false)',
                        default='true')

    args = parser.parse_args()
    args.upload = False if 'false' == args.upload.lower() else True

    ENVS = os.environ
    if not "TACHY_INTERFACE" in ENVS:
        print("Environment \"TACHY_INTERFACE\" is not set")
        exit()

    args.interface = ENVS["TACHY_INTERFACE"]

    if 'spi' not in args.interface:
        print("[ERROR] Only spi interface can be used for booting")
        exit(-1)

    args.type = args.interface.split(':')[-1]

    return args

if __name__ == '__main__':
    args = get_parser()

    ret = rt_core.boot(path=args.path, spi_type=args.type, upload=args.upload)
    if ret:
        print("Success to boot")
    else:
        print("Failed to boot")
        print("Error code :", rt_core.get_last_error_code())
        exit(-1)
