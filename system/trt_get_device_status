#!/usr/bin/env python

import os, sys
import pprint
import argparse
import numpy as np
import tachy_rt.core.functions as rt_core

def get_parser():
    """
    Get the parser.
    :return: parser
    """

    parser = argparse.ArgumentParser(description='Deep learning scratch application.')

    args = parser.parse_args()

    ENVS = os.environ
    if not "TACHY_INTERFACE" in ENVS:
        print("Environment \"TACHY_INTERFACE\" is not set")
        exit()

    args.interface = ENVS["TACHY_INTERFACE"]

    return args

if __name__ == '__main__':
    args = get_parser()

    ret, _dict = rt_core.get_device_status(itf=args.interface)
    if ret:
        print(f"[INFO] NPU Version     : {_dict['parameter']['device_version']}")
        print(f"[INFO] Runtime Version : {_dict['parameter']['runtime_version']}")
        print(f"[INFO] Serial Number   : {_dict['parameter']['serial_number']}")
        print(f"[INFO] Model List")
        if _dict['parameter']['models'] is not None:
            for i, model in enumerate(_dict['parameter']['models']):
                print(f"-----------------------------------")
                print(f" Name : {model['name']}")
                print(f" Date : {model['date']}")
                print(f" Type : {model['type']}")
    else:
        print("Failed to get status of device")
        print("Error code :", rt_core.get_last_error_code())
        exit(-1)
